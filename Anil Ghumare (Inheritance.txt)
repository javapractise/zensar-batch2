#Single inheritance


class Vehicle {
  protected String brand = "Maruti";        // Vehicle attribute
  public void honk() {                    // Vehicle method
    System.out.println("Tuut, tuut!");
  }
}

class Car extends Vehicle {
  private String modelName = "Alto";    // Car attribute
  public static void main(String[] args) {

    // Create a myCar object
    Car myCar = new Car();

    // Call the honk() method (from the Vehicle class) on the myCar object
    myCar.honk();

    // Display the value of the brand attribute (from the Vehicle class) and the value of the modelName from the Car class
    System.out.println(myCar.brand + " " + myCar.modelName);
  }
}


#Multilevel inheritance

class Car{
   public Car()
   {
	System.out.println("Class Car");
   }
   public void vehicleType()
   {
	System.out.println("Vehicle Type: Car");
   }
}
class Maruti extends Car{
   public Maruti()
   {
	System.out.println("Class Maruti");
   }
   public void brand()
   {
	System.out.println("Brand: Maruti");
   }
   public void speed()
   {
	System.out.println("Max: 90Kmph");
   }
}
public class Maruti800 extends Maruti{

   public Maruti800()
   {
	System.out.println("Maruti Model: 800");
   }
   public void speed()
   {
	System.out.println("Max: 80Kmph");
   }
   public static void main(String args[])
   {
	 Maruti800 obj=new Maruti800();
	 obj.vehicleType();
	 obj.brand();
	 obj.speed();
   }
}


#Hybrid inheritance

class M
{
   public void disp()
   {
	System.out.println("M");
   }
}

class N extends M
{
   public void disp()
   {
	System.out.println("N");
   }
}

class O extends M
{
   public void disp()
   {
	System.out.println("O");
   }
	
}

class P extends N
{
   public void disp()
   {
	System.out.println("P");
   }
   public static void main(String args[]){

	P obj = new P();
	obj.disp();
   }
}


#Hirachical inheritance

class M
{
   public void methodM()
   {
      System.out.println("method of Class M");
   }
}
class N extends M
{
   public void methodN()
   {
      System.out.println("method of Class N");
   }
}
class O extends M
{
  public void methodO()
  {
     System.out.println("method of Class O");
  }
}
class P extends M
{
  public void methodP()
  {
     System.out.println("method of Class P");
  }
}
class JavaExample
{
  public static void main(String args[])
  {
     N obj1 = new N();
     O obj2 = new O();
     P obj3 = new P();
     //All classes can access the method of class M
     obj1.methodM();
     obj2.methodM();
     obj3.methodM();
  }
}
