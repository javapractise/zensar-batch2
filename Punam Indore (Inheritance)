//  Single Inheritance

package Punam;
class Animal{  
public void eat()
{
System.out.println("eating...");
}  
}  
class Dog extends Animal{  
 public void bark()
{
System.out.println("barking...");
}  
}  
public class TestInheritance{  
public static void main(String args[]){  
Dog d=new Dog();  
d.bark();  
d.eat();  
}
}

// Multilevel Inheritance

package Punam;  
class Animal{  
public void eat()
{
System.out.println("eating...");
}  
}  
class Dog extends Animal
{  
public void bark()
{
System.out.println("barking...");
}  
}  
class BabyDog extends Dog
{  
public void weep()
{
System.out.println("weeping...");
}  
}  
public class TestInheritance2{  
public static void main(String args[]){  
BabyDog d=new BabyDog();  
d.weep();  
d.bark();  
d.eat();  
}
}

// hierarchical Inheritance

package Punam;
class Animal
{  
public void eat()
{
System.out.println("eating...");}  
}  
class Dog extends Animal{  
public void bark()
{
System.out.println("barking...");
}  
}  
class Cat extends Animal
{  
publc void meow()
{
System.out.println("meowing...");
}  
}  
publc class TestInheritance3
{  
public static void main(String args[])
{  
Cat c=new Cat();  
c.meow();  
c.eat();  

}
}      
// Hybrid Inheritance

package Punam;
public class main {
interface X
{
   public void myMethod();
}
interface Y
{
   public void myMethod();
}
class JavaExample implements X, Y
{
   public void myMethod()
   {
       System.out.println("Implementing more than one interfaces");
   }
   public static void main(String args[]){
	   JavaExample obj = new JavaExample();
	   obj.myMethod();
   }
} 
 // Multiple Inheritance

package Punam;
class Parent1 {
  
  void fun() {
 
     System.out.println("Parent1");
  }
}
 
class Parent2 {
 
  void fun() {
 
    System.out.println("Parent2");
  }
}
 
class Test extends Parent1, Parent2 {
 
 public static void main(String args[]) {
 
    Test t = new Test();
 
     t.fun();
  }
}
