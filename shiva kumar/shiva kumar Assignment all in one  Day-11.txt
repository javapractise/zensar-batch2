shiva kumar kurvakilla

1.ArrayDequeExa.java
import java.util.ArrayDeque;
import java.util.Deque;
public class ArrayDequeExa{
	public static void main (String[]args){
		//creating Deque and adding elements
		Deque<String>deque=new ArrayDeque<String>();
		deque.add("vani");
		deque.add("sony");
		deque.add("shivani mane");
		deque.add("jaysri");
		//Traversing elements
		for (String str:deque){
			System.out.println(str);
		}
	}
}

Output:

vani
sony
shivani mane
jaysri




2.ArrayListExa.java

import java.util.ArrayList;
import java.util.Iterator;

public class ArrayListExa{
	 public static void main(String args[]){
		 ArrayList<String> list=new ArrayList<String>();//creating arraylist
		 list.add("siddu"); //Adding object in arraylist
		 list.add("shiva");
	//Travesing list through iterator
		 Iterator itr=list.iterator();
		 while(itr.hasNext()){
			 System.out.println(itr.next());

		 }
	 }
}

Output:

siddu
shiva


3.DaemonThread.java

public class DaemonThread extends Thread{
	public void run(){
		if(Thread.currentThread().isDaemon()){//checking for daemon thread
			System.out.println("shiva");
		}
		else{
			System.out.println("siddu");
		}
	}
	public static void main(String[]args){
		DaemonThread t1=new DaemonThread();//creating thread
		DaemonThread t2=new DaemonThread();
		DaemonThread t3=new DaemonThread();


		t1.setDaemon(true);//now t1 is daemon thread

		t1.start();//starting threads
		t2.start();
		t3.start();
	}
}


Output:

shiva
siddu
siddu

4.HashMapExa.java

import java.util.HashMap;
import java.util.Map;

public class HashMapExa {
	public static void main(String args[]){
		HashMap<Integer,String>map=new HashMap<Integer,String>();//creating HasMap
		map.put(1,"Mango");//put elements in map
		map.put(2,"Apple");
		map.put(3,"Banana");
		map.put(4,"Grapes");
		System.out.println("iterating Hashmap...");
		for(Map.Entry m:map.entrySet()){
		System.out.println(m.getKey()+""+m.getValue());
		}
	}
}


/*
Ouput:
iterating Hashmap...
1Mango
2Apple
3Banana
4Grapes


5.InterThreadCommunication.java


class Customer{    
	int amount=10000;    
    synchronized void withdraw(int amount){    
		System.out.println("going to withdraw...");    
		if(this.amount<amount){    
			System.out.println("Less balance; waiting for deposit...");    
			try{wait();}catch(Exception e){}    
		}    
		this.amount-=amount;    
		System.out.println("withdraw completed...");    
    }    
    synchronized void deposit(int amount){    
		System.out.println("going to deposit...");    
		this.amount+=amount;    
		System.out.println("deposit completed... ");    
		notify();    
	}    
}    
    
public class InterThreadCommunication{    
	public static void main(String args[]){    
		final Customer c=new Customer();    
		new Thread(){    
			public void run(){c.withdraw(15000);}    
		}.start();    
		new Thread(){    
			public void run(){c.deposit(10000);}    
		}.start();    
    
	}
}    

Output:
	going to withdraw...
	Less balance; waiting for deposit...
	going to deposit...
	deposit completed... 
	withdraw completed...
	


6.PriorityQueueExa.java

import java.util.*;  
public class PriorityQueueExa{  
	public static void main(String args[]){  
		PriorityQueue<String> queue=new PriorityQueue<String>();  
		queue.add("shiva");  
		queue.add("siddu");  
		System.out.println("head:"+queue.element());  
		System.out.println("head:"+queue.peek());  
		System.out.println("iterating the queue elements:");  
		Iterator itr=queue.iterator();  
		while(itr.hasNext()){  
			System.out.println(itr.next());  
		}  
		queue.remove();  
		queue.poll();  
		System.out.println("after removing two elements:");  
		Iterator<String> itr2=queue.iterator();  
		while(itr2.hasNext()){  
			System.out.println(itr2.next());  
		}  
	}  
}  


Output:

head:shiva
head:shiva
iterating the queue elements:
shiva
siddu
after removing two elements:


7.StatckExa.java



import java.util.Iterator;
import java.util.Stack;

public class StatckExa{
	public static void main(String args[]){
		Stack<String>stack=new Stack<String>();
		stack.push("shiva");
		stack.push("siddu");
		stack.pop();
		Iterator<String> itr=stack.iterator();
		while(itr.hasNext()){
			System.out.println(itr.next());
		}
	}
}

/*
Output:
	shiva



8.ThreadPriority.java


public class ThreadPriority extends Thread   
{  
  
// Method 1  
// Whenever the start() method is called by a thread  
// the run() method is invoked  
public void run()  
{  
// the print statement  
System.out.println("Inside the run() method");  
}  
  
// the main method  
public static void main(String argvs[])  
{  
// Creating threads with the help of ThreadPriorityExample class  
ThreadPriority th1 = new ThreadPriority();  
ThreadPriority th2 = new ThreadPriority();  
ThreadPriority th3 = new ThreadPriority();  
  
// We did not mention the priority of the thread.  
// Therefore, the priorities of the thread is 5, the default value  
  
// 1st Thread  
// Displaying the priority of the thread  
// using the getPriority() method  
System.out.println("Priority of the thread th1 is : " + th1.getPriority());  
  
// 2nd Thread   
// Display the priority of the thread  
System.out.println("Priority of the thread th2 is : " + th2.getPriority());  
  
// 3rd Thread   
// // Display the priority of the thread  
System.out.println("Priority of the thread th2 is : " + th2.getPriority());  
  
// Setting priorities of above threads by  
// passing integer arguments  
th1.setPriority(2);  
th2.setPriority(3);  
th3.setPriority(4);  
  
// 6  
System.out.println("Priority of the thread th1 is : " + th1.getPriority());  
  
// 3  
System.out.println("Priority of the thread th2 is : " + th2.getPriority());  
  
// 9  
System.out.println("Priority of the thread th3 is : " + th3.getPriority());  
  
// Main thread  
  
// Displaying name of the currently executing thread   
System.out.println("Currently Executing The Thread : " + Thread.currentThread().getName());  
  
System.out.println("Priority of the main thread is : " + Thread.currentThread().getPriority());  
  
// Priority of the main thread is 10 now  
Thread.currentThread().setPriority(5);  
  
System.out.println("Priority of the main thread is : " + Thread.currentThread().getPriority());  
}  
}  


Output:

Priority of the thread th1 is : 5
Priority of the thread th2 is : 5
Priority of the thread th2 is : 5
Priority of the thread th1 is : 2
Priority of the thread th2 is : 3
Priority of the thread th3 is : 4
Currently Executing The Thread : main
Priority of the main thread is : 5
Priority of the main thread is : 5


9.TreeMapExa2.java



import java.util.*;  
public class TreeMapNavigable{  
	public static void main(String args[]){  
		NavigableMap<Integer,String> map=new TreeMap<Integer,String>();    
		map.put(100,"vani");    
		map.put(102,"sony");    
		map.put(101,"jaya");    
		map.put(103,"shivani");    
		//Maintains descending order  
		System.out.println("descendingMap: "+map.descendingMap());  
		//Returns key-value pairs whose keys are less than or equal to the specified key.  
		System.out.println("headMap: "+map.headMap(102,true));  
		//Returns key-value pairs whose keys are greater than or equal to the specified key.  
		System.out.println("tailMap: "+map.tailMap(102,true));  
		//Returns key-value pairs exists in between the specified key.  
		System.out.println("subMap: "+map.subMap(100, false, 102, true));   
	}  
} 


Output:

descendingMap: {103=shivani, 102=sony, 101=jaya, 100=vani}
headMap: {100=vani, 101=jaya, 102=sony}
tailMap: {102=sony, 103=shivani}
subMap: {101=jaya, 102=sony}





10.VectorExa.java


import java.util.Iterator;
import java.util.Vector;
public class VectorExa{
	public static void main(String args[]){
		Vector<String>v= new Vector<String>();
		v.add("shivani");
		v.add("vani");
		v.add("jaya");
		v.add("sony");
		Iterator<String>itr=v.iterator();
		while(itr.hasNext()){
			System.out.println(itr.next());
		}
	}
}




Output:

shivani
vani
jaya
sony

