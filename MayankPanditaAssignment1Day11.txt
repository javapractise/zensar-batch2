
1)

public class TestDaemonThread1 extends Thread
{
public void run()
{
if(Thread.currentThread().isDaemon())
{
System.out.println("daemon thread work");
 }
  else
{
 System.out.println("user thread work");
  }
   }
public static void main(String[]args)
{
TestDaemonThread1 t1=new TestDaemonThread1();
TestDaemonThread1 t2=new TestDaemonThread1();
TestDaemonThread1 t3=new TestDaemonThread1();


t1.setDaemon(true);

t1.start();//starting threads
t2.start();
t3.start();
}
}


OutPut : 

daemon thread work
user thread work
user thread work



2)
 
class TestDaemonThread2 extends Thread
{
public void run()
{
System.out.println("Name:"+Thread.currentThread().getName());

System.out.println("Daemon:"+Thread.currentThread().isDaemon());
}

public static void main(String[] args){

TestDaemonThread2 t1=new TestDaemonThread2();
TestDaemonThread2 t2=new TestDaemonThread2();
t1.start();
t1.setDaemon(true);//will throw exception here 
t2.start();
}
}

OutPut 
exception inthread main: java.lang.iilegalithreadstate exception


3)


import java.lang.*;  
  
public class ThreadPriorityExample extends Thread   
{  
public void run()  
{  
System.out.println("Inside the run() method");  
}  
  
public static void main(String argvs[])  

{  
ThreadPriorityExample th1 = new ThreadPriorityExample();  
ThreadPriorityExample th2 = new ThreadPriorityExample();  
ThreadPriorityExample th3 = new ThreadPriorityExample();  
  
System.out.println("Priority of the thread th1 is : " + th1.getPriority());  
  
System.out.println("Priority of the thread th2 is : " + th2.getPriority());  
  
System.out.println("Priority of the thread th2 is : " + th2.getPriority());  
    
th1.setPriority(6);  
th2.setPriority(3);  
th3.setPriority(9);  
    
System.out.println("Priority of the thread th1 is : " + th1.getPriority());  
    
System.out.println("Priority of the thread th2 is : " + th2.getPriority());  
    
System.out.println("Priority of the thread th3 is : " + th3.getPriority());  
  
   
System.out.println("Currently Executing The Thread : " + Thread.currentThread().getName());  
  
System.out.println("Priority of the main thread is : " + Thread.currentThread().getPriority());  
  
Thread.currentThread().setPriority(10);  
  
System.out.println("Priority of the main thread is : " + Thread.currentThread().getPriority());  
}  
}  
Output:

Priority of the thread th1 is : 5
Priority of the thread th2 is : 5
Priority of the thread th2 is : 5
Priority of the thread th1 is : 6
Priority of the thread th2 is : 3
Priority of the thread th3 is : 9
Currently Executing The Thread : main
Priority of the main thread is : 5
Priority of the main thread is : 10


4)


example for the inter threadcommunication

class Main
{
  
int amount = 10000;
   synchronized void withdraw (int amount)
  { 
System.out.println ("going to withdraw...");
if (this.amount < amount)
      {
System.out.println ("Less balance; waiting for deposit...");
	
  try
{
 wait ();
}
catch (Exception e)
{
}
      
}    
this.amount -= amount;
System.out.println ("withdraw completed...");
 }
synchronized void deposit (int amount)
  {
System.out.println ("going to deposit...");
this.amount += amount;
  System.out.println ("deposit completed... ");
   notify ();
} } 
 
class Test
{  public static void main (tring args[])
  {
   final Main c = new Main ();
    new Thread ()
    {
      public void run ()
      {
	c.withdraw (15000);
    } }.start ();
    new Thread ()
    {
      public void run ()
      {
	c.deposit (10000);
    } }.start ();
}}

OutPut

going to withdraw...
Less balance; waiting for deposit...
going to deposit...
deposit completed...
withdraw completed


5)

 class TestJavaCollection1{
 public static void main(string args[]){
 ArrayList<string> list=new ArrayList<string>();//creating arraylist
 list.add("Rajeev");//Adding object in arraylist
 list.add("Nidhi");
 list.add("Sarath");
 list.add("Mayank");
//Travesing list through iterator
iterator itr=list.iterator();
while(itr.hasNext()){
system.out.println(itr.next());

}
}

OutPut :
Rajeev, Nidhi, Sarath, Mayank




6)


Java TreeMap Example: remove()
import java.util.*;  
public class TreeMap2 {  
   public static void main(String args[]) {  
    TreeMap<Integer,String> map=new TreeMap<Integer,String>();    
      map.put(100,"Sarath");    
      map.put(102,"Rajeev");    
      map.put(101,"Vasu");    
      map.put(103,"Mayank");    
      System.out.println("Before invoking remove() method");  
      for(Map.Entry m:map.entrySet())  
      {  
          System.out.println(m.getKey()+" "+m.getValue());      
      }  
      map.remove(102);      
      System.out.println("After invoking remove() method");  
      for(Map.Entry m:map.entrySet())  
      {  
          System.out.println(m.getKey()+" "+m.getValue());      
      }  
      }  
}  
Output:

Before invoking remove() method
100 Sarath
101 Vasu
102 Rajeev
103 Mayank
After invoking remove() method
100 Sarath
101 Vasu
103 Mayank


7)

import java.util.*;  
public class TestJavaCollection7{  
public static void main(String args[])
{  
    HashSet<String> set=new HashSet<String>();  
	set.add("W");  
	set.add("X");  
	set.add("Y");  
	set.add("Z");  
  Iterator<String> itr=set.iterator();  
  while(itr.hasNext()){  
  System.out.println(itr.next());  
}  
}  
}  

Output:
W
X
Y
Z


8)

package zensar;
import java.util.*;  

public class Main 
{
   public static void main(String[] args) 
 { 
  Deque<String> dequeCities = new ArrayDeque<String>();  
  dequeCities.add("Mayank");  
  dequeCities.add("Vikram");  
  dequeCities.add("Manoj");  
      for (String str : dequeCities) 
{  
  System.out.println(str);  
  }  
   }  
    }  


OutPut

Mayank
Vikram
Manoj

9)

import java.util.*;
public class Vectorsal
{
 public static void main(String args[])
 {
 Vector <String> v= new Vector <String>();
  v.ad("section");
  v.add("platoon");
  v.add("company");
  v.add("brigade");
 iterator<string>itr=v.iterator();
   while(itr.has.Next()){
  System.out.println(itr.next());
 }
  }


OutPut
section
platoon
company
brigade