
1)

import java.util.concurrent.ConcurrentHashMap;   
import java.util.Iterator;   
public class FailSafeEx1 {   
    public static void main(String[] args)   
    {   
          
        ConcurrentHashMap<String, Integer> m   
            = new ConcurrentHashMap<String, Integer>();   
        m.put("TWO", 2);   
        m.put("SEVENTEEN", 17);   
        m.put("FIFTY", 50);   
        m.put("EIGHTEEN", 18);   
          
        Iterator it = m.keySet().iterator();   
        while (it.hasNext()) {   
            String key = (String)it.next();   
            System.out.println(key + " : " + m.get(key));   
        
            m.put("NINE", 9);   
        }   
    }   
} 


OutPut

EIGHTEEN : 18FIFTY : 50
NINE : 9
TWO : 2
SEVENTEEN : 17


2)


import java.util.*;
public class CollectionExampleMax{
	public static void main(String a[]){
		List<Integer> list=new ArrayList<Integer>();
		list.add(146);
		list.add(667);
		list.add(214);
		list.add(116);
		list.add(8);
		list.add(222);
		System.out.println("Value of maximum elements from the collection:"+Collections.max(list));

	}
}



OutPut

Value of maximum elements from the collection:667


3)


import java.util.*;  

class Student implements Comparable<Student> {  
    public String name;  
    public Student(String name) {  
    	this.name = name;  
    }  
    public int compareTo(Student person) {  
    	return name.compareTo(person.name);    
    }   
}  
public class Sort {  
	public static void main(String[] args) {  
		ArrayList<Student> al=new ArrayList<Student>();  
		al.add(new Student("Vasu"));  
		al.add(new Student("Rajeev"));  
		al.add(new Student("Mukul"));  
		al.add(new Student("Tanmay"));    
		Collections.sort(al);  
		for (Student s : al) {  
			System.out.println(s.name);  
		}  
	}  
}  


OutPut

Mukul
Rajeev
Tanmay
Vasu




4)

import java.util.concurrent.CopyOnWriteArrayList;   
import java.util.Iterator;   
class FailSafeDemo {   
    public static void main(String args[])   
    {   
        CopyOnWriteArrayList<Integer> list   
           = new CopyOnWriteArrayList<Integer>(new Integer[] { 1, 7, 9, 11 });   
        Iterator itr = list.iterator();   
        while (itr.hasNext()) {   
           Integer i = (Integer)itr.next();   
           System.out.println(i);   
           if (i == 7)   
           list.add(15);    
   }   
 }   
}   


Output:
1
7
9
11


5)


import java.util.*;  

import java.util.*;  

public class GenericsEx {
	public static void main(String args[]){  
	ArrayList<String> list=new ArrayList<String>();  
	list.add("Shera Shera");  
	list.add("Naushera");  
	  
	String s=list.get(1);
	System.out.println("Element is: "+s);  
	  
	Iterator<String> itr=list.iterator();  
	while(itr.hasNext()){  
	System.out.println(itr.next());  
	}  
	}  
}  


OutPut


Element is: Naushera
Shera Shera
Naushera



6)


import java.util.Arrays;  
import java.util.List;  
public class BoundedEx 
{
   public static void addNumbers(List<? super Integer> list) {  
   for(Object n:list)  
 {  
   System.out.println(n);  
	 }  
	    }  
	public static void main(String[] args) {  
	      
    List<Integer> a1=Arrays.asList(10,12,37);  
	  System.out.println("displaying the Integer values");  
	    addNumbers(a1);  
	List<Number> a2=Arrays.asList(10.0,12.0,37.0);  
	  System.out.println("displaying the Number values");  
	    addNumbers(a2);  
	}  
	  
	}  



OutPut


displaying the Integer values
10
12
37
displaying the Number values
10.0
12.0
37.0


7)

import java.util.*;
import java.util.Collections;
class ReverseOrder{
public static void main(String args[]){
  

ArrayList<String> a1=new ArrayList<String>();
  	a1.add("viru");
	a1.add ("Saurav");
	a1.add("Mukesh");
	a1.add("Tahir");

Collections.sort(a1,Collections.reverseOrder());
	Iterator itr=a1.iterator();
	while(itr.hasNext()) {
	System.out.println(itr.next());
}
}
}


OutPut


viru
Tahir
Saurav
Mukesh



8)


import java.util.*;
class WrapperClass{
public static void main(String args[]){


ArrayList a1=new ArrayList();
	a1.add(Integer.valueOf(201));
	a1.add(Integer.valueOf(101));
	a1.add(230);//internally will be converted into object aas integer.valueOf(230)

Collections.sort(a1);


	Iterator itr=a1.iterator();
	while(itr.hasNext()){
	System.out.println(itr.next());
	}
    }
    }



OutPut



101
201
230


9)


import java.util.ArrayList;
public class UpperWildCard
{
private static Double add(ArrayList<?extends Number> num){

  double sum=0.0;
   for (Number n:num)

  {
sum=sum+n.doubleValue();
    }
    return sum;
 }
public static void main(String[] args)
{

ArrayList<Integer>l1=new ArrayList<Integer>();
l1.add(10);
l1.add(20);
System.out.println("displaying the sum="+add(l1));

ArrayList<Double>l2=new ArrayList<Double>();
l2.add(30.0);
l2.add(40.0);
System.out.println("displaying the sum="+add(l2));

}
}


OutPut


 
displaying the sum=30.0
displaying the sum=70.0

