import java.io.pipedReader;
import java.io.PipedWriter;

public class PipeReaderTeja{
    public static void main(String[] args)
    {
        try{
            final PipeReader read = new PipedReader();
            final PipedWriter write = new PipedWriter(read);
            
            Thread readerThread = new Thread(new runnable()){
                public void run(){
                    try{
                        int data = read.read();
                        while (data!=-1){
                            System.out.println((char)data);
                            data = read.read();
                        }
                    }catch(Exception ex){
                        
                    }
                }
            };
        }
        Thread writerThread = new Thread(new Runnable()){
            public void run(){
                try{
                    write.write("I Love India\n".toCharArray());
                }catch(Exception ex){
                    
                }
            }
        };
        readThread.start();
        writerThread.start();
    }
    catch (Exception ex){
        System.out.println(ex.getMessage());
    }
}

Output :-
--------- 
	I Love India

SequenceInputStream :-
======================
import java.io.*;
class InputStreamExample{
    public static void main(String[] args) throws Exception 
    {
        FileInputStream input1 = new FileInputStream("D:\\testin.txt");
        FileInputStream input2 = new FileInputStream("D:\\testout.txt");
        
        SequenceInputStream inst = new SequenceInputStream(input1,input2);
        int j;
        while((j= inst.read()) !=-1){
            System.out.println((char)j);
        }
        inst.close();
        input1.close();
        input2.close();
        
        
    }
}
testin.txt:

Welcome to TechLearning.

testout.txt:

It is the example of Java SequenceInputStream class.

Output :-
----------
Welcome to TechLearning.It is the example of Java SequenceInputStream class.

3.
import java.io.*;

class Input1{    
  public static void main(String args[])throws Exception{    
   FileInputStream fin1=new FileInputStream("D:\\testin1.txt");    
   FileInputStream fin2=new FileInputStream("D:\\testin2.txt");    
   FileOutputStream fout=new FileOutputStream("D:\\testout.txt");      
   SequenceInputStream sis=new SequenceInputStream(fin1,fin2);    
   int i;    
   while((i=sis.read())!=-1)    
   {    
     fout.write(i);        
   }    
   sis.close();    
   fout.close();      
   fin1.close();      
   fin2.close();       
   System.out.println("Success..");  
  }    
}    

output :-
--------
Success..

4.
package com.javatpoint;  
import java.io.*;    
import java.util.*;    
class Input2{    
public static void main(String args[])throws IOException{    
//creating the FileInputStream objects for all the files    
FileInputStream fin=new FileInputStream("D:\\a.txt");  //welcome  
FileInputStream fin2=new FileInputStream("D:\\b.txt"); //to   
FileInputStream fin3=new FileInputStream("D:\\c.txt");  //java  
FileInputStream fin4=new FileInputStream("D:\\d.txt"); //programming   
//creating Vector object to all the stream    
Vector v=new Vector();    
v.add(fin);    
v.add(fin2);    
v.add(fin3);    
v.add(fin4);              
//creating enumeration object by calling the elements method    
Enumeration e=v.elements();      
//passing the enumeration object in the constructor    
SequenceInputStream bin=new SequenceInputStream(e);    
int i=0;      
while((i=bin.read())!=-1){    
System.out.print((char)i);    
}     
bin.close();    
fin.close();    
fin2.close();    
}    
}    

Output :-
=========
welcometojavaprogramming
4.
import java.io.IOException;  
import java.io.RandomAccessFile;  
  
public class RandomAccessFileExample {  
    static final String FILEPATH ="myFile.TXT";  
    public static void main(String[] args) {  
        try {  
            System.out.println(new String(readFromFile(FILEPATH, 0, 18)));  
            writeToFile(FILEPATH, "I love my country and my people", 31);  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
    }  
    private static byte[] readFromFile(String filePath, int position, int size)  
            throws IOException {  
        RandomAccessFile file = new RandomAccessFile(filePath, "r");  
        file.seek(position);  
        byte[] bytes = new byte[size];  
        file.read(bytes);  
        file.close();  
        return bytes;  
    }  
    private static void writeToFile(String filePath, String data, int position)  
            throws IOException {  
        RandomAccessFile file = new RandomAccessFile(filePath, "rw");  
        file.seek(position);  
        file.write(data.getBytes());  
        file.close();  
    }  
}  
5.

import java.io.*;
class Java implements Runnable {
	public static void main(String args[])
	{
		
		Java Teja = new Java();


		Thread t = new Thread(Teja, "Java");
		t.start();


		System.out.println(t.getName());
	}
	@Override public void run()
	{
		System.out.println("Inside run method");
	}
}
Output :-
---------
Java
Inside run metho